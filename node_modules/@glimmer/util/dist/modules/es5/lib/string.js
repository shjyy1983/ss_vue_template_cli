export function strip(strings) {
    var out = '';

    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
    }

    for (var i = 0; i < strings.length; i++) {
        var string = strings[i];
        var dynamic = args[i] !== undefined ? String(args[i]) : '';
        out += '' + string + dynamic;
    }
    var lines = out.split('\n');
    while (lines && lines[0].match(/^\s*$/)) {
        lines.shift();
    }
    while (lines && lines[lines.length - 1].match(/^\s*$/)) {
        lines.pop();
    }
    var min = Number.MAX_SAFE_INTEGER;
    for (var _iterator = lines, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
        } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
        }

        var line = _ref;

        var leading = line.match(/^\s*/)[0].length;
        min = Math.min(min, leading);
    }
    var stripped = [];
    for (var _iterator2 = lines, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
        var _ref2;

        if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
        } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
        }

        var _line = _ref2;

        stripped.push(_line.slice(min));
    }
    return stripped.join('\n');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3V0aWwvbGliL3N0cmluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FBTSxTQUFBLEtBQUEsQ0FBQSxPQUFBLEVBQWlFO0FBQ3JFLFFBQUksTUFBSixFQUFBOztBQURxRSxzQ0FBakUsSUFBaUU7QUFBakUsWUFBaUU7QUFBQTs7QUFFckUsU0FBSyxJQUFJLElBQVQsQ0FBQSxFQUFnQixJQUFJLFFBQXBCLE1BQUEsRUFBQSxHQUFBLEVBQXlDO0FBQ3ZDLFlBQUksU0FBUyxRQUFiLENBQWEsQ0FBYjtBQUNBLFlBQUksVUFBVSxLQUFBLENBQUEsTUFBQSxTQUFBLEdBQXdCLE9BQU8sS0FBL0IsQ0FBK0IsQ0FBUCxDQUF4QixHQUFkLEVBQUE7QUFFQSxvQkFBVSxNQUFWLEdBQUEsT0FBQTtBQUNEO0FBRUQsUUFBSSxRQUFRLElBQUEsS0FBQSxDQUFaLElBQVksQ0FBWjtBQUVBLFdBQU8sU0FBUyxNQUFBLENBQUEsRUFBQSxLQUFBLENBQWhCLE9BQWdCLENBQWhCLEVBQXlDO0FBQ3ZDLGNBQUEsS0FBQTtBQUNEO0FBRUQsV0FBTyxTQUFTLE1BQU0sTUFBQSxNQUFBLEdBQU4sQ0FBQSxFQUFBLEtBQUEsQ0FBaEIsT0FBZ0IsQ0FBaEIsRUFBd0Q7QUFDdEQsY0FBQSxHQUFBO0FBQ0Q7QUFFRCxRQUFJLE1BQU0sT0FBVixnQkFBQTtBQUVBLHlCQUFBLEtBQUEsa0hBQXdCO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQSxZQUF4QixJQUF3Qjs7QUFDdEIsWUFBSSxVQUFVLEtBQUEsS0FBQSxDQUFBLE1BQUEsRUFBQSxDQUFBLEVBQWQsTUFBQTtBQUVBLGNBQU0sS0FBQSxHQUFBLENBQUEsR0FBQSxFQUFOLE9BQU0sQ0FBTjtBQUNEO0FBRUQsUUFBSSxXQUFKLEVBQUE7QUFFQSwwQkFBQSxLQUFBLHlIQUF3QjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUEsWUFBeEIsS0FBd0I7O0FBQ3RCLGlCQUFBLElBQUEsQ0FBYyxNQUFBLEtBQUEsQ0FBZCxHQUFjLENBQWQ7QUFDRDtBQUVELFdBQU8sU0FBQSxJQUFBLENBQVAsSUFBTyxDQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gc3RyaXAoc3RyaW5nczogVGVtcGxhdGVTdHJpbmdzQXJyYXksIC4uLmFyZ3M6IHVua25vd25bXSkge1xuICBsZXQgb3V0ID0gJyc7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyaW5ncy5sZW5ndGg7IGkrKykge1xuICAgIGxldCBzdHJpbmcgPSBzdHJpbmdzW2ldO1xuICAgIGxldCBkeW5hbWljID0gYXJnc1tpXSAhPT0gdW5kZWZpbmVkID8gU3RyaW5nKGFyZ3NbaV0pIDogJyc7XG5cbiAgICBvdXQgKz0gYCR7c3RyaW5nfSR7ZHluYW1pY31gO1xuICB9XG5cbiAgbGV0IGxpbmVzID0gb3V0LnNwbGl0KCdcXG4nKTtcblxuICB3aGlsZSAobGluZXMgJiYgbGluZXNbMF0ubWF0Y2goL15cXHMqJC8pKSB7XG4gICAgbGluZXMuc2hpZnQoKTtcbiAgfVxuXG4gIHdoaWxlIChsaW5lcyAmJiBsaW5lc1tsaW5lcy5sZW5ndGggLSAxXS5tYXRjaCgvXlxccyokLykpIHtcbiAgICBsaW5lcy5wb3AoKTtcbiAgfVxuXG4gIGxldCBtaW4gPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUjtcblxuICBmb3IgKGxldCBsaW5lIG9mIGxpbmVzKSB7XG4gICAgbGV0IGxlYWRpbmcgPSBsaW5lLm1hdGNoKC9eXFxzKi8pIVswXS5sZW5ndGg7XG5cbiAgICBtaW4gPSBNYXRoLm1pbihtaW4sIGxlYWRpbmcpO1xuICB9XG5cbiAgbGV0IHN0cmlwcGVkID0gW107XG5cbiAgZm9yIChsZXQgbGluZSBvZiBsaW5lcykge1xuICAgIHN0cmlwcGVkLnB1c2gobGluZS5zbGljZShtaW4pKTtcbiAgfVxuXG4gIHJldHVybiBzdHJpcHBlZC5qb2luKCdcXG4nKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=