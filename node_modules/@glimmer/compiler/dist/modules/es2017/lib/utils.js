export function processOpcodes(compiler, opcodes) {
    for (let i = 0, l = opcodes.length; i < l; i++) {
        let method = opcodes[i][0];
        let params = opcodes[i][1];
        if (params) {
            compiler[method].apply(compiler, params);
        } else {
            compiler[method].call(compiler);
        }
    }
}
// There is a small whitelist of namespaced attributes specially
// enumerated in
// https://www.w3.org/TR/html/syntax.html#attributes-0
//
// > When a foreign element has one of the namespaced attributes given by
// > the local name and namespace of the first and second cells of a row
// > from the following table, it must be written using the name given by
// > the third cell from the same row.
//
// In all other cases, colons are interpreted as a regular character
// with no special meaning:
//
// > No other namespaced attribute can be expressed in the HTML syntax.
const XLINK = 'http://www.w3.org/1999/xlink';
const XML = 'http://www.w3.org/XML/1998/namespace';
const XMLNS = 'http://www.w3.org/2000/xmlns/';
const WHITELIST = {
    'xlink:actuate': XLINK,
    'xlink:arcrole': XLINK,
    'xlink:href': XLINK,
    'xlink:role': XLINK,
    'xlink:show': XLINK,
    'xlink:title': XLINK,
    'xlink:type': XLINK,
    'xml:base': XML,
    'xml:lang': XML,
    'xml:space': XML,
    xmlns: XMLNS,
    'xmlns:xlink': XMLNS
};
export function getAttrNamespace(attrName) {
    return WHITELIST[attrName] || null;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL2NvbXBpbGVyL2xpYi91dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FFTSxTQUFVLGNBQVYsQ0FBeUIsUUFBekIsRUFBd0MsT0FBeEMsRUFBb0Q7QUFDeEQsU0FBSyxJQUFJLElBQUksQ0FBUixFQUFXLElBQUksUUFBUSxNQUE1QixFQUFvQyxJQUFJLENBQXhDLEVBQTJDLEdBQTNDLEVBQWdEO0FBQzlDLFlBQUksU0FBUyxRQUFRLENBQVIsRUFBVyxDQUFYLENBQWI7QUFDQSxZQUFJLFNBQVMsUUFBUSxDQUFSLEVBQVcsQ0FBWCxDQUFiO0FBQ0EsWUFBSSxNQUFKLEVBQVk7QUFDVixxQkFBUyxNQUFULEVBQWlCLEtBQWpCLENBQXVCLFFBQXZCLEVBQWlDLE1BQWpDO0FBQ0QsU0FGRCxNQUVPO0FBQ0wscUJBQVMsTUFBVCxFQUFpQixJQUFqQixDQUFzQixRQUF0QjtBQUNEO0FBQ0Y7QUFDRjtBQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsTUFBTSxRQUFRLDhCQUFkO0FBQ0EsTUFBTSxNQUFNLHNDQUFaO0FBQ0EsTUFBTSxRQUFRLCtCQUFkO0FBRUEsTUFBTSxZQUFzQztBQUMxQyxxQkFBaUIsS0FEeUI7QUFFMUMscUJBQWlCLEtBRnlCO0FBRzFDLGtCQUFjLEtBSDRCO0FBSTFDLGtCQUFjLEtBSjRCO0FBSzFDLGtCQUFjLEtBTDRCO0FBTTFDLG1CQUFlLEtBTjJCO0FBTzFDLGtCQUFjLEtBUDRCO0FBUTFDLGdCQUFZLEdBUjhCO0FBUzFDLGdCQUFZLEdBVDhCO0FBVTFDLGlCQUFhLEdBVjZCO0FBVzFDLFdBQU8sS0FYbUM7QUFZMUMsbUJBQWU7QUFaMkIsQ0FBNUM7QUFlQSxPQUFNLFNBQVUsZ0JBQVYsQ0FBMkIsUUFBM0IsRUFBMkM7QUFDL0MsV0FBTyxVQUFVLFFBQVYsS0FBdUIsSUFBOUI7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpY3QsIE9wdGlvbiB9IGZyb20gJ0BnbGltbWVyL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gcHJvY2Vzc09wY29kZXMoY29tcGlsZXI6IGFueSwgb3Bjb2RlczogYW55KSB7XG4gIGZvciAobGV0IGkgPSAwLCBsID0gb3Bjb2Rlcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBsZXQgbWV0aG9kID0gb3Bjb2Rlc1tpXVswXTtcbiAgICBsZXQgcGFyYW1zID0gb3Bjb2Rlc1tpXVsxXTtcbiAgICBpZiAocGFyYW1zKSB7XG4gICAgICBjb21waWxlclttZXRob2RdLmFwcGx5KGNvbXBpbGVyLCBwYXJhbXMpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb21waWxlclttZXRob2RdLmNhbGwoY29tcGlsZXIpO1xuICAgIH1cbiAgfVxufVxuXG4vLyBUaGVyZSBpcyBhIHNtYWxsIHdoaXRlbGlzdCBvZiBuYW1lc3BhY2VkIGF0dHJpYnV0ZXMgc3BlY2lhbGx5XG4vLyBlbnVtZXJhdGVkIGluXG4vLyBodHRwczovL3d3dy53My5vcmcvVFIvaHRtbC9zeW50YXguaHRtbCNhdHRyaWJ1dGVzLTBcbi8vXG4vLyA+IFdoZW4gYSBmb3JlaWduIGVsZW1lbnQgaGFzIG9uZSBvZiB0aGUgbmFtZXNwYWNlZCBhdHRyaWJ1dGVzIGdpdmVuIGJ5XG4vLyA+IHRoZSBsb2NhbCBuYW1lIGFuZCBuYW1lc3BhY2Ugb2YgdGhlIGZpcnN0IGFuZCBzZWNvbmQgY2VsbHMgb2YgYSByb3dcbi8vID4gZnJvbSB0aGUgZm9sbG93aW5nIHRhYmxlLCBpdCBtdXN0IGJlIHdyaXR0ZW4gdXNpbmcgdGhlIG5hbWUgZ2l2ZW4gYnlcbi8vID4gdGhlIHRoaXJkIGNlbGwgZnJvbSB0aGUgc2FtZSByb3cuXG4vL1xuLy8gSW4gYWxsIG90aGVyIGNhc2VzLCBjb2xvbnMgYXJlIGludGVycHJldGVkIGFzIGEgcmVndWxhciBjaGFyYWN0ZXJcbi8vIHdpdGggbm8gc3BlY2lhbCBtZWFuaW5nOlxuLy9cbi8vID4gTm8gb3RoZXIgbmFtZXNwYWNlZCBhdHRyaWJ1dGUgY2FuIGJlIGV4cHJlc3NlZCBpbiB0aGUgSFRNTCBzeW50YXguXG5cbmNvbnN0IFhMSU5LID0gJ2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnO1xuY29uc3QgWE1MID0gJ2h0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZSc7XG5jb25zdCBYTUxOUyA9ICdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3htbG5zLyc7XG5cbmNvbnN0IFdISVRFTElTVDogRGljdDxzdHJpbmcgfCB1bmRlZmluZWQ+ID0ge1xuICAneGxpbms6YWN0dWF0ZSc6IFhMSU5LLFxuICAneGxpbms6YXJjcm9sZSc6IFhMSU5LLFxuICAneGxpbms6aHJlZic6IFhMSU5LLFxuICAneGxpbms6cm9sZSc6IFhMSU5LLFxuICAneGxpbms6c2hvdyc6IFhMSU5LLFxuICAneGxpbms6dGl0bGUnOiBYTElOSyxcbiAgJ3hsaW5rOnR5cGUnOiBYTElOSyxcbiAgJ3htbDpiYXNlJzogWE1MLFxuICAneG1sOmxhbmcnOiBYTUwsXG4gICd4bWw6c3BhY2UnOiBYTUwsXG4gIHhtbG5zOiBYTUxOUyxcbiAgJ3htbG5zOnhsaW5rJzogWE1MTlMsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QXR0ck5hbWVzcGFjZShhdHRyTmFtZTogc3RyaW5nKTogT3B0aW9uPHN0cmluZz4ge1xuICByZXR1cm4gV0hJVEVMSVNUW2F0dHJOYW1lXSB8fCBudWxsO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==